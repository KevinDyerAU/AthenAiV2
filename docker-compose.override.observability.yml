services:
  postgres:
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.75"

  neo4j:
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      NEO4J_server_memory_heap_initial__size: "256m"
      NEO4J_server_memory_heap_max__size: "512m"
      NEO4J_server_memory_pagecache_size: "256m"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474/"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "1.0"

  rabbitmq:
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 30
    ports:
      - "15672:15672"
      - "5672:5672"
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"

  redis:
    image: redis:7
    container_name: enhanced-ai-redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.25"

  n8n:
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5678/"]
      interval: 10s
      timeout: 5s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5678:5678"

  api-service:
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/system/health"]
      interval: 10s
      timeout: 5s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.75"
