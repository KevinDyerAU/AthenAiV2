# NGINX Security Hardening
# Include from your server {} with: include /etc/nginx/security/security.conf;

# Security headers
add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "no-referrer" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Content-Security-Policy "default-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'" always;
add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;

# CORS (adjust origins as needed)
set $cors "";
if ($http_origin ~* ^https?://(localhost(:[0-9]+)?|127\.0\.0\.1|your\.domain\.com)$) {
  set $cors "true";
}
if ($request_method = 'OPTIONS') {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Max-Age' 86400 always;
  return 204;
}
if ($cors = "true") {
  add_header 'Access-Control-Allow-Origin' "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
}

# Apply per location or server (requires zone defined at http-level include)
limit_req zone=req_per_ip burst=20 nodelay;

# Body size & timeouts
client_max_body_size 10m;
client_body_timeout 15s;
client_header_timeout 15s;
send_timeout 30s;

# HSTS (enable only behind TLS)
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
