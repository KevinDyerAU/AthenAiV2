# Unified Environment Configuration Example (Superset)
# This file merges variables from:
# - Root: .env.example, .env.development.example, .env.production.example
# - Enhanced: enhanced-ai-agent-os/.env.example
# Copy to .env (or environment-specific files) and adjust. Do NOT commit real secrets.

# =============================================================================
# SYSTEM / APP
# =============================================================================
APP_NAME=enhanced-ai-agent-os
APP_ENV=development # development|staging|production
PORT=5678
API_BASE_URL=http://localhost:8000
SYSTEM_NAME=enhanced-ai-agent-os
ENVIRONMENT=development
VERSION=3.0.0
DEPLOYMENT_ID=local-dev-001

# =============================================================================
# N8N / WORKFLOW ENGINE
# =============================================================================
N8N_IMAGE_TAG=stable
N8N_BASE_URL=http://localhost:5678
# API key used by scripts/load-workflows.sh for REST imports and activation
N8N_API_KEY=
N8N_WEBHOOK_SECRET=
N8N_ADMIN_EMAIL=you@example.com
N8N_ADMIN_PASSWORD=n8nAdminPassw0rd
N8N_HOST=0.0.0.0
N8N_PORT=5678
N8N_PROTOCOL=http
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=
N8N_ENCRYPTION_KEY=
N8N_SECURE_COOKIE=false
# n8n DB (uses Postgres settings below by default)
N8N_DB_TYPE=postgresdb
N8N_DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
N8N_DB_POSTGRESDB_HOST=${POSTGRES_HOST}
N8N_DB_POSTGRESDB_PORT=${POSTGRES_PORT}
N8N_DB_POSTGRESDB_USER=${POSTGRES_USER}
N8N_DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
N8N_DB_POSTGRESDB_SCHEMA=n8n
# n8n execution & logging
WEBHOOK_URL=${N8N_BASE_URL}
N8N_METRICS=true
N8N_LOG_LEVEL=info
N8N_LOG_OUTPUT=console,file
N8N_LOG_FILE_COUNT_MAX=100
N8N_LOG_FILE_SIZE_MAX=16777216
GENERIC_TIMEZONE=UTC
N8N_EXECUTIONS_PROCESS=main
N8N_EXECUTIONS_TIMEOUT=3600
N8N_EXECUTIONS_TIMEOUT_MAX=7200
N8N_EXECUTIONS_DATA_SAVE_ON_ERROR=all
N8N_EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
N8N_EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true
N8N_EXECUTIONS_DATA_PRUNE=true
N8N_EXECUTIONS_DATA_MAX_AGE=336

# =============================================================================
# DATABASES / QUEUES / CACHE
# =============================================================================
# App-level DB (ORM convenience)
DB_TYPE=postgres
DB_HOST=localhost
DB_PORT=5432
DB_USER=ai_user
DB_PASSWORD=
DB_NAME=ai_agent
DATABASE_URL=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=5
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=1800
DATABASE_SSL_MODE=disable
DATABASE_SSL_ROOT_CERT=

# Postgres (compose services use these)
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=enhanced_ai_os
POSTGRES_USER=ai_agent_user
POSTGRES_PASSWORD=
POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB

# Neo4j
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=
NEO4J_HOST=neo4j
NEO4J_BOLT_PORT=7687
NEO4J_HTTP_PORT=7474
NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
NEO4J_PLUGINS=[]
NEO4J_HEAP_INITIAL_SIZE=1G
NEO4J_HEAP_MAX_SIZE=2G
NEO4J_PAGECACHE_SIZE=1G
NEO4J_QUERY_CACHE_SIZE=10M
NEO4J_JVM_ADDITIONAL=-XX:+UseG1GC -XX:+UnlockExperimentalVMOptions

# RabbitMQ
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}${RABBITMQ_VHOST}
# Compose defaults
RABBITMQ_DEFAULT_USER=ai_agent_queue_user
RABBITMQ_DEFAULT_PASS=
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_METRICS_PORT=15692
RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.8
RABBITMQ_DISK_FREE_LIMIT=2GB
RABBITMQ_HEARTBEAT=60
RABBITMQ_CONNECTION_TIMEOUT=60000

# Redis
REDIS_URL=redis://localhost:6379

# =============================================================================
# LangSmith Integration (for tracing and observability)
# =============================================================================
# Enable LangSmith tracing (true/false)
LANGCHAIN_TRACING_V2=true
# LangSmith API endpoint (default: https://api.smith.langchain.com)
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
# Your LangSmith API key (get from https://smith.langchain.com/settings)
LANGCHAIN_API_KEY=<your LangSmith API key>
# Project name in LangSmith (default: enhanced-ai-os)
LANGCHAIN_PROJECT=<your LangSmith project name>
# Session identifier (default: n8n username or 'n8n')
LANGCHAIN_SESSION=<your LangSmith session name>

# =============================================================================
# AI PROVIDERS
# =============================================================================

# Primary OpenAI Configuration (Default)
OPENAI_API_KEY=your-openai-key
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.1
OPENAI_MAX_TOKENS=4000
OPENAI_TIMEOUT=30000

# Optional OpenRouter Configuration (set USE_OPENROUTER=true to enable)
USE_OPENROUTER=false
OPENROUTER_API_KEY=your-openrouter-key
OPENROUTER_MODEL=meta-llama/llama-3.1-8b-instruct:free
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
OPENROUTER_TEMPERATURE=0.1
OPENROUTER_MAX_TOKENS=2000
OPENROUTER_TIMEOUT=60000
# Anthropic
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-5-sonnet-20240620
ANTHROPIC_DEFAULT_MODEL=claude-3-sonnet-20240229
ANTHROPIC_MAX_TOKENS=2000
# Google AI
GOOGLE_API_KEY=
GOOGLE_MODEL=gemini-1.5-pro
GOOGLE_AI_API_KEY=
GOOGLE_AI_DEFAULT_MODEL=gemini-pro
# OpenRouter (optional)
OPENROUTER_API_KEY=
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
OPENROUTER_DEFAULT_MODEL=openai/gpt-4
# Search APIs (Optional)
FIRECRAWL_API_KEY=your-firecrawl-key
# Legacy search APIs (deprecated)
# SERPAPI_API_KEY=your-serpapi-key
# BING_SEARCH_API_KEY=your-bing-key

# LangChain (optional)
LANGCHAIN_TRACING_V2=true
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_API_KEY=
LANGCHAIN_PROJECT=enhanced-ai-agent-os-${ENVIRONMENT}
LANGCHAIN_SESSION=session-${DEPLOYMENT_ID}

# =============================================================================
# SECURITY / AUTH
# =============================================================================
JWT_SECRET=
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=
HMAC_SECRET=
WEBHOOK_SECRET=
CORS_ORIGINS=*
ALLOW_ORIGINS=*
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX=120
# OIDC (optional)
AUTH_PROVIDER=local
OIDC_ISSUER=
OIDC_CLIENT_ID=
OIDC_CLIENT_SECRET=
OIDC_AUDIENCE=
OIDC_JWKS_URI=
# TLS/SSL
TLS_ENABLED=false
TLS_CERT_FILE=
TLS_KEY_FILE=
TLS_MIN_VERSION=TLSv1.2

# =============================================================================
# MONITORING / LOGGING / TRACING / ALERTING
# =============================================================================
LOG_LEVEL=info
ENABLE_PROMETHEUS=true
PROMETHEUS_PORT=9464
ENABLE_TRACING=false
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_SERVICE_NAME=enhanced-ai-agent-os
SENTRY_DSN=
# Monitoring endpoints
GRAFANA_URL=http://localhost:3000
ALERTMANAGER_URL=http://localhost:9093
# Prometheus/Grafana/Loki (compose-centric)
PROMETHEUS_HOST=prometheus
PROMETHEUS_RETENTION_TIME=30d
PROMETHEUS_STORAGE_PATH=/prometheus
PROMETHEUS_WEB_ENABLE_LIFECYCLE=true
PROMETHEUS_WEB_ENABLE_ADMIN_API=true
GRAFANA_HOST=grafana
GRAFANA_PORT=3000
GRAFANA_SECURITY_ADMIN_USER=admin
GRAFANA_SECURITY_ADMIN_PASSWORD=
GRAFANA_SECURITY_ALLOW_EMBEDDING=true
GRAFANA_AUTH_ANONYMOUS_ENABLED=false
GRAFANA_INSTALL_PLUGINS=grafana-neo4j-datasource,rabbitmq-datasource,postgres-datasource
GRAFANA_LOG_LEVEL=info
LOKI_HOST=loki
LOKI_PORT=3100
LOKI_RETENTION_PERIOD=720h
LOKI_MAX_LOOK_BACK_PERIOD=0s
NODE_EXPORTER_PORT=9100
# Alerting
PAGERDUTY_INTEGRATION_KEY=
SLACK_WEBHOOK_URL=
SLACK_CHANNEL=#alerts
SLACK_CHANNEL_CRITICAL=#alerts-critical
SLACK_CHANNEL_OPS=#alerts-ops
SLACK_CHANNEL_PLATFORM=#alerts-platform
ALERT_EMAIL_TO=
ALERT_EMAIL_FROM=
SMTP_SMARTHOST=
SMTP_USERNAME=
SMTP_PASSWORD=

# =============================================================================
# EMAIL / EXTERNAL SERVICES
# =============================================================================
EMAIL_PROVIDER=none # sendgrid|ses|smtp|none
SENDGRID_API_KEY=
SES_ACCESS_KEY_ID=
SES_SECRET_ACCESS_KEY=
SMTP_HOST=localhost
SMTP_PORT=2525
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=ai@localhost
# Social
X_BEARER_TOKEN=
LINKEDIN_ACCESS_TOKEN=
FACEBOOK_ACCESS_TOKEN=
# Cloud storage
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
S3_BUCKET=
GCP_PROJECT_ID=
GCP_CREDENTIALS_JSON=
AZURE_STORAGE_ACCOUNT=
AZURE_STORAGE_KEY=
AZURE_STORAGE_CONTAINER=

# =============================================================================
# PERFORMANCE / EXECUTION DEFAULTS
# =============================================================================
PARALLELISM_DEFAULT=4
MAX_RETRIES_DEFAULT=3
BACKOFF_STRATEGY=exponential
TIMEOUT_MS=30000

# =============================================================================
# GOVERNANCE / AUDIT
# =============================================================================
COMPLIANCE_STANDARDS=CAN-SPAM,GDPR,OWASP
AUDIT_LOG_ENABLED=true
AUDIT_LOG_DESTINATION=file # file|stdout|http
AUDIT_LOG_PATH=./audit.log

# =============================================================================
# BACKUP & DR
# =============================================================================
BACKUP_ENABLED=false
BACKUP_S3_BUCKET=
BACKUP_SCHEDULE_CRON="0 2 * * *"
BACKUP_RETENTION_DAYS=7
DR_STRATEGY=warm-standby
# Compose-style backup params
BACKUP_SCHEDULE=0 2 * * *
BACKUP_STORAGE_PATH=/backups
BACKUP_COMPRESSION=gzip
BACKUP_ENCRYPTION_ENABLED=false
BACKUP_ENCRYPTION_KEY=
RECOVERY_POINT_OBJECTIVE=4h
RECOVERY_TIME_OBJECTIVE=1h
RECOVERY_VALIDATION_ENABLED=true

# =============================================================================
# NETWORK / EXTERNAL ACCESS
# =============================================================================
DOCKER_NETWORK_NAME=enhanced-ai-network
DOCKER_NETWORK_SUBNET=172.20.0.0/16
DOCKER_NETWORK_GATEWAY=172.20.0.1
EXTERNAL_HOST=localhost
EXTERNAL_PORT=80
EXTERNAL_PROTOCOL=http
EXTERNAL_DOMAIN=localhost
SSL_ENABLED=false
SSL_CERT_PATH=
SSL_KEY_PATH=
SSL_CA_PATH=

# =============================================================================
# FEATURE FLAGS
# =============================================================================
FEATURE_ENABLE_PLANNING=true
FEATURE_ENABLE_EXECUTION=true
FEATURE_ENABLE_QA=true
FEATURE_ENABLE_COMMUNICATION=true
CONSCIOUSNESS_SUBSTRATE_ENABLED=true
INTER_AGENT_COMMUNICATION_ENABLED=true
AI_CHAT_AGENT_ENABLED=true
WORKFLOW_ORCHESTRATION_ENABLED=true
MULTI_MODEL_AI_ENABLED=true
VECTOR_SEARCH_ENABLED=true
REAL_TIME_MONITORING_ENABLED=true
ADVANCED_ANALYTICS_ENABLED=true
DYNAMIC_AGENT_CREATION_ENABLED=false
AUTO_SCALING_ENABLED=false
PREDICTIVE_ANALYTICS_ENABLED=false
QUANTUM_COMPUTING_INTEGRATION_ENABLED=false

# =============================================================================
# DEV / TEST
# =============================================================================
DEBUG_MODE=false
VERBOSE_LOGGING=false
DEVELOPMENT_TOOLS_ENABLED=true
HOT_RELOAD_ENABLED=false
TEST_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/test_${POSTGRES_DB}
TEST_NEO4J_URL=bolt://${NEO4J_HOST}:${NEO4J_BOLT_PORT}
TEST_RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_HOST}:${RABBITMQ_PORT}

# =============================================================================
# MISC
# =============================================================================
TOOLS_BASE_URL=${N8N_BASE_URL}
TOOLS_REGISTRY_PATH=./workflows/tools_registry.json

# =============================================================================
# AUTONOMOUS AGENT SETTINGS
# =============================================================================
AUTONOMY_ENABLED=true
AUTONOMY_API_EXPOSE=true
AUTONOMY_DEFAULT_MONITOR_INTERVAL=60
AUTONOMY_SAFETY_MODE=guarded
# Component-specific
DRIFT_SCAN_INTERVAL=300
HEALING_POLICY=conservative
