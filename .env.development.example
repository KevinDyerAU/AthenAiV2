# Development Environment Configuration Example
# Copy to .env or .env.development and adjust as needed. Do NOT commit real secrets.

APP_NAME=enhanced-ai-agent-os
APP_ENV=development
PORT=5678
N8N_BASE_URL=http://localhost:5678
API_BASE_URL=http://localhost:8000
N8N_API_KEY=
N8N_WEBHOOK_SECRET=dev_n8n_webhook_secret

DB_TYPE=postgres
DB_HOST=localhost
DB_PORT=5432
DB_USER=ai_user
DB_PASSWORD=dev_password
DB_NAME=ai_agent_dev
DATABASE_URL=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379

# RabbitMQ
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}${RABBITMQ_VHOST}

AI_DEFAULT_PROVIDER=openai
OPENAI_API_KEY=your-openai-key
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.1

# Optional OpenRouter Configuration (set USE_OPENROUTER=true to enable)
USE_OPENROUTER=false
OPENROUTER_API_KEY=your-openrouter-key
OPENROUTER_MODEL=meta-llama/llama-3.1-8b-instruct:free
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-5-sonnet-20240620

GOOGLE_API_KEY=
GOOGLE_MODEL=gemini-1.5-pro

AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_API_KEY=
AZURE_OPENAI_DEPLOYMENT=gpt-4o

JWT_SECRET=dev_jwt_secret_change_me
JWT_SECRET_KEY=${JWT_SECRET}
ENCRYPTION_KEY=&lt;CHANGE_ME&gt;
HMAC_SECRET=dev_hmac_secret
WEBHOOK_SECRET=dev_webhook_secret
CORS_ORIGINS=*
ALLOW_ORIGINS=http://localhost:3000,http://localhost:5678
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX=300

LOG_LEVEL=debug
ENABLE_PROMETHEUS=true
PROMETHEUS_PORT=9464
ENABLE_TRACING=false
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_SERVICE_NAME=enhanced-ai-agent-os-dev
SENTRY_DSN=
GRAFANA_URL=http://localhost:3000
ALERTMANAGER_URL=http://localhost:9093

PAGERDUTY_INTEGRATION_KEY=
SLACK_WEBHOOK_URL=

NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=neo4j

EMAIL_PROVIDER=none
SENDGRID_API_KEY=
SES_ACCESS_KEY_ID=
SES_SECRET_ACCESS_KEY=
SMTP_HOST=localhost
SMTP_PORT=2525
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=ai@localhost

X_BEARER_TOKEN=
LINKEDIN_ACCESS_TOKEN=
FACEBOOK_ACCESS_TOKEN=

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
S3_BUCKET=

GCP_PROJECT_ID=
GCP_CREDENTIALS_JSON=

AZURE_STORAGE_ACCOUNT=
AZURE_STORAGE_KEY=
AZURE_STORAGE_CONTAINER=

PARALLELISM_DEFAULT=4
MAX_RETRIES_DEFAULT=3
BACKOFF_STRATEGY=exponential
TIMEOUT_MS=30000

# Database connection pooling & SSL (dev sensible defaults)
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=5
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=1800
DATABASE_SSL_MODE=disable

FEATURE_ENABLE_PLANNING=true
FEATURE_ENABLE_EXECUTION=true
FEATURE_ENABLE_QA=true
FEATURE_ENABLE_COMMUNICATION=true

COMPLIANCE_STANDARDS=CAN-SPAM,GDPR,OWASP
AUDIT_LOG_ENABLED=true
AUDIT_LOG_DESTINATION=stdout
AUDIT_LOG_PATH=./audit.dev.log

TOOLS_BASE_URL=${N8N_BASE_URL}
TOOLS_REGISTRY_PATH=./workflows/tools_registry.json

# Auth/OIDC (optional, for SSO)
AUTH_PROVIDER=local
OIDC_ISSUER=
OIDC_CLIENT_ID=
OIDC_CLIENT_SECRET=
OIDC_AUDIENCE=
OIDC_JWKS_URI=

# Backup & DR (dev placeholders)
BACKUP_ENABLED=false
BACKUP_S3_BUCKET=
BACKUP_SCHEDULE_CRON="0 2 * * *"
BACKUP_RETENTION_DAYS=7
DR_STRATEGY=warm-standby
